specVersion: 0.0.2
description: GMX
repository: https://github.com/gmx-io/gmx-subgraph
schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: base-testnet
    source:
      address: "0x916a04c8B7FB4ca03b06C00499c8e2fba6AD8Ae4"
      abi: ChainlinkAggregator
      startBlock: 10661598
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: base-testnet
    source:
      address: "0x40c164a5c5022f25Ec41Bb96F6fAc14b15Ce99c1"
      abi: ChainlinkAggregator
      startBlock: 10661502
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorLINK
    network: base-testnet
    source:
      address: "0x07553A2E16d7c2b7C8DBE1da206Bf65f32BCdf4F"
      abi: ChainlinkAggregator
      startBlock: 10661502
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedLINK
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorDAI
    network: base-testnet
    source:
      address: "0x9fB350158A769997729592223aa37B5e7cA4De6d"
      abi: ChainlinkAggregator
      startBlock: 10661502
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedDAI
      file: ./src/pricesMapping.ts
        - kind: ethereum/contract
  - kind: ethereum/contract
    name: ChainlinkAggregatorUSDC
    network: base-testnet
    source:
      address: "0xCB3026f0a031b99be7fDb1c0DF06bc62065937e2"
      abi: ChainlinkAggregator
      startBlock: 10661502
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedDAI
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: GlpManager
    network: base-testnet
    source:
      address: "0x05339f09375f2E74032617d4e44bd192ce596eCb"
      abi: GlpManager
      startBlock: 10633984
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyGlpStat
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: GlpManager2
    network: base-testnet
    source:
      address: "0x05339f09375f2E74032617d4e44bd192ce596eCb"
      abi: GlpManager
      startBlock: 10633984
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyGlpStat
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: OrderBook
    network: base-testnet
    source:
      address: "0x96E73B10d0f4b7180c7C89456E984dFF6C73EB3f"
      abi: OrderBook
      startBlock: 10702308
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder

        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder

        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
      file: ./src/ordersMapping.ts
  - kind: ethereum/contract
    name: FastPriceFeed
    network: base-testnet
    source:
      address: ""
      abi: FastPriceFeed
      startBlock: 1326270
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceFeed
          file: ./abis/FastPriceFeed.json
      eventHandlers:
        - event: SetPrice(address,uint256)
          handler: handleSetPrice
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FastPriceEvents
    network: base-testnet
    source:
      address: ""
      abi: FastPriceEvents
      startBlock: 3716732
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handlePriceUpdate
      file: ./src/pricesMapping.ts

  # - kind: ethereum/contract
  #   name: UniswapPool
  #   network: base-testnet
  #   source:
  #     address: ""
  #     abi: UniswapPoolV3
  #     startBlock: 200000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - UniswapPrice
  #     abis:
  #       - name: UniswapPoolV3
  #         file: ./abis/UniswapPoolV3.json
  #     eventHandlers:
  #       - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
  #         handler: handleUniswapGmxEthSwap
  #     file: ./src/pricesMapping.ts

  # - kind: ethereum/contract
  #   name: FeeGmxRewardDistributor
  #   network: base-testnet
  #   source:
  #     address: ""
  #     abi: RewardDistributor
  #     startBlock: 218204
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - GmxStat
  #     abis:
  #       - name: RewardDistributor
  #         file: ./abis/RewardDistributor.json
  #     eventHandlers:
  #       - event: Distribute(uint256)
  #         handler: handleDistributeEthToGmx
  #     file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: EsgmxGmxRewardDistributor
  #   network: base-testnet
  #   source:
  #     address: ""
  #     abi: RewardDistributor
  #     startBlock: 218204
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - GmxStat
  #     abis:
  #       - name: RewardDistributor
  #         file: ./abis/RewardDistributor.json
  #     eventHandlers:
  #       - event: Distribute(uint256)
  #         handler: handleDistributeEsgmxToGmx
  #     file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: FeeGlpRewardDistributor
  #   network: base-testnet
  #   source:
  #     address: ""
  #     abi: RewardDistributor
  #     startBlock: 218204
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - GmxStat
  #     abis:
  #       - name: RewardDistributor
  #         file: ./abis/RewardDistributor.json
  #     eventHandlers:
  #       - event: Distribute(uint256)
  #         handler: handleDistributeEthToGlp
  #     file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: EsgmxGlpRewardDistributor
  #   network: base-testnet
  #   source:
  #     address: ""
  #     abi: RewardDistributor
  #     startBlock: 218208
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - GmxStat
  #     abis:
  #       - name: RewardDistributor
  #         file: ./abis/RewardDistributor.json
  #     eventHandlers:
  #       - event: Distribute(uint256)
  #         handler: handleDistributeEsgmxToGlp
  #     file: ./src/mapping.ts

  - kind: ethereum/contract
    name: Vault2
    network: base-testnet
    source:
      address: "0xaB1E8868FEe285cF5F379aCF61ae4D65211fc6FE"
      abi: Vault
      startBlock: 10630758
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TradingStat
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: ./src/tradingMapping.ts

  - kind: ethereum/contract
    name: Vault
    network: base-testnet
    source:
      address: "0xaB1E8868FEe285cF5F379aCF61ae4D65211fc6FE"
      abi: Vault
      startBlock: 10630758
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Swap
        - IncreasePosition
        - DecreasePosition
        - HourlyVolume
        - HourlyVolumeBySource
        - HourlyVolumeByToken
        - HourlyFee
        - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      # callHandlers: # doesn't work on Arbitrum
      #   - function: setTokenConfig(address,uint256,uint256,uint256,uint256,bool,bool)
      #     handler: handleSetTokenConfig
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
      file: ./src/mapping.ts
